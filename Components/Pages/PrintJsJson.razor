@page "/print-js-json"
@inject IJSRuntime Js
@inject SweetAlertService Swal
@rendermode InteractiveServer

<div class="container" >
    
    <h3>Let's print JSON</h3>
    <div class="flex-row-inp">
        
        <textarea class="form-control" name="to-json"  id="inp"  @bind="InputJson"></textarea>
        
        <button class="transmit-json" title="Transmit json to beauty view" type="button" @onclick="TransmitCode">
            <img src="../static/icons/transmit.svg" alt=""/>
        </button>

        <json-editor id="editor1"></json-editor>
        <json-editor id="editor_check"></json-editor>
    
    </div> 
         
    <button class="btn btn-dark print-json" type="button" @onclick="PrintJson">
        Print JSON
    </button>

</div>


@code {

    private string InputJson { get; set; } = @"[{""value"":""Иванов Виктор"",""unrestricted_value"":""Витя"",""data:surname"":""Иванов"",""data:name"":""Виктор"",""data:patronymic"":""null"",""data:gender"":""MALE""},
   {""value"":""Иванченко Александр"",""unrestricted_value"":""Саша"",""data:surname"":""Иванченко"",""data:name"":""Александр"",""data:patronymic"":null,""data:gender"":""MALE""},{""value"":""Екатерина Юрьевна"",""unrestricted_value"":""Катя"",
      ""data:surname"":null,""data:name"":""Екатерина"",""data:patronymic"":""Юрьевна"",""data:gender"":""FEMALE"" }]";
    private async Task<bool> CheckJson() => await Js.InvokeAsync<bool>("checkTextByPrintEditor");
    private async Task<bool> JsonIsArray() => await Js.InvokeAsync<bool>("jsonIsArray");
    private async Task TransmitCode()
    {
        if (!(await CheckJson()))
            await Swal.FireAsync("Oops...","JSON is not valid, please fix it", "error");
        else await Js.InvokeVoidAsync("doBeauty", InputJson);
    }

    
    private async Task PrintJson()
    {
        if (!(await CheckJson()))
        {
            await Swal.FireAsync("Oops...","JSON is not valid, please fix it", "error");
            return;
        }
        if (!(await JsonIsArray()))
        {
            await Swal.FireAsync("Oops...","It works only with arrays", "error");
            return;
        }

        object distinctJsonKeys = await Js.InvokeAsync<dynamic>("getArrayKeys");
        await Js.InvokeVoidAsync("printJson", distinctJsonKeys);
    }
}
